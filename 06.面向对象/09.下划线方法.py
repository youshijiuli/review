# pytohn文档（类的基本定制）：https://docs.python.org/zh-cn/3.6/reference/datamodel.html#object.__init__

# __init__
'''
object.__new__(cls[, ...])
调用以创建一个 cls 类的新实例。__new__() 是一个静态方法 (因为是特例所以你不需要显式地声明)，它会将所请求实例所属的类作为第一个参数。其余的参数会被传递给对象构造器表达式 (对类的调用)。__new__() 的返回值应为新对象实例 (通常是 cls 的实例)。

典型的实现会附带适宜的参数使用 super().__new__(cls[, ...])，通过超类的 __new__() 方法来创建一个类的新实例，然后根据需要修改新创建的实例再将其返回。

如果 __new__() 返回一个 cls 的实例，则新实例的 __init__() 方法会在之后被执行，例如 __init__(self[, ...])，其中 self 为新实例，其余的参数与被传递给 __new__() 的相同。

如果 __new__() 未返回一个 cls 的实例，则新实例的 __init__() 方法就不会被执行。

__new__() 的目的主要是允许不可变类型的子类 (例如 int, str 或 tuple) 定制实例创建过程。它也常会在自定义元类中被重载以便定制类创建过程
'''

# __init__():
'''
在实例 (通过 __new__()) 被创建之后，返回调用者之前调用。其参数与传递给类构造器表达式的参数相同。一个基类如果有 __init__() 方法，则其所派生的类如果也有 __init__() 方法，就必须显式地调用它以确保实例基类部分的正确初始化；例如: super().__init__([args...]).

因为对象是由 __new__() 和 __init__() 协作构造完成的 (由 __new__() 创建，并由 __init__() 定制)，所以 __init__() 返回的值只能是 None，否则会在运行时引发 TypeError。
'''

# 关键点：
'''
1. 对象是由 __new__() 和 __init__() 协作构造完成的
2. 由 __new__() 创建，并由 __init__() 定制

就是说 new 创建空的实例对象， init对实例对象定制，就是初始化一些基本的信息

二者合作构造出完整的类实例， 也就是他俩一起才被称为 构造方法
'''

